DROP TABLE IF EXISTS film_rating;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS user_roles;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS genres;


CREATE TABLE IF NOT EXISTS public.users (
	user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	email varchar(255) NOT NULL UNIQUE,
	username varchar(20) NOT NULL UNIQUE,
	password varchar(255) NOT NULL,
	CONSTRAINT PK_users PRIMARY KEY (user_id),
	CONSTRAINT UQ_USER_EMAIL UNIQUE (email),
	CONSTRAINT UQ_USER_Username UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.roles (
	role_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name varchar(255) NOT NULL UNIQUE,
	CONSTRAINT PK_roles PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS public.user_roles (
	user_id BIGINT NOT NULL,
	role_id BIGINT NOT NULL,
	CONSTRAINT PK_user_roles PRIMARY KEY (user_id, role_id),
	CONSTRAINT FK1_user_roles FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FK2_user_roles FOREIGN KEY (role_id) REFERENCES public.roles(role_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.genres (
	genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name varchar(255) NOT NULL UNIQUE,
	CONSTRAINT PK_genres PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS public.films (
	film_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name varchar(1000) NOT NULL,
	description varchar(1000) NOT NULL,
	duration integer NOT NULL,
	release_date date NOT NULL,
	genre_id BIGINT NOT NULL,
	image BINARY LARGE OBJECT NOT NULL,
	CONSTRAINT PK_films PRIMARY KEY (film_id),
	CONSTRAINT FK_films FOREIGN KEY (genre_id) REFERENCES public.genres(genre_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.film_rating (
	film_rating_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    film_id  BIGINT  NOT NULL,
	user_id BIGINT NOT NULL,
	rating integer NOT NULL,
	CONSTRAINT PK_film_rating PRIMARY KEY (film_rating_id),
	CONSTRAINT FK1_film_rating FOREIGN KEY (film_id) REFERENCES public.films(film_id) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FK2_film_rating FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.reviews (
	review_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    film_id  BIGINT  NOT NULL,
	user_id BIGINT NOT NULL,
	text varchar(255) NOT NULL,
	post_date timestamp NOT NULL,
	CONSTRAINT PK_reviews PRIMARY KEY (review_id),
	CONSTRAINT FK1_reviews FOREIGN KEY (film_id) REFERENCES public.films(film_id) ON DELETE CASCADE ON UPDATE RESTRICT,
	CONSTRAINT FK2_reviews FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);
